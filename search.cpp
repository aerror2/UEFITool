#include <stdio.h>
#include <string.h>
#include <stdlib.h>

const char szPattern[] ={ 
0x57,0x00,0x61,0x00,0x72,0x00,0x6E,0x00,0x,0x69,0x00,0x6E,0x00,0x67,0x00,0x3A,0x00
0x20,0x00,0x20,0x00,0x54,0x00,0x68,0x00,0x,0x69,0x00,0x73,0x00,0x20,0x00,0x42,0x00
0x49,0x00,0x4F,0x00,0x53,0x00,0x20,0x00,0x,0x69,0x00,0x73,0x00,0x20,0x00,0x4E,0x00
0x6F,0x00,0x74,0x00,0x20,0x00,0x66,0x00,0x,0x6F,0x00,0x72,0x00,0x20,0x00,0x50,0x00
0x72,0x00,0x6F,0x00,0x64,0x00,0x75,0x00,0x,0x63,0x00,0x74,0x00,0x69,0x00,0x6F,0x00
};

int main(int argc, char**argv)
{
	
	if(argc==2)
	{
			FILE *f = fopen(argv[1],"rb");
			unsigned int size =0;
			fseek(f,0,SEEK_END);
			size = ftell(f);
			fseek(f,0,SEEK_SET);
			char *buff = (char *) malloc(size);
			fread(buff,1,size,f);
			fclose(f);
		//	printf("size %d\n",size);
			if(size>=sizeof(szPattern))
			{
				for(int i=0;i<=size-sizeof(szPattern);i++)
				{
					if(memcmp(szPattern,buff+i,sizeof(szPattern))==0)
					{
						printf("got Pattern: %s\n", argv[1]);
						break;
					}
				}
			}

			free(buff);

			
	}
	else
	{
		FILE *f = fopen("test.bin","wb");
		fwrite(szPattern,1,20,f);
		fclose(f);
	}	

	return 0;

}